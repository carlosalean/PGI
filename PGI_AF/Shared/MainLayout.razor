@inherits LayoutComponentBase

<PageTitle>PGI_AF</PageTitle>


<div class="bb-page">

    <Sidebar @ref="sidebar"
                 ImageSrc="./ico/icono.svg"
                 Title="Administración Forence"
                 DataProvider="SidebarDataProvider" />
    <main>
        <div class="bb-top-row px-4 d-flex justify-content-between">
            <Icon Name="IconName.List" role="button" @onclick="ToggleSidebar" />
            <a href="/." target="_blank">Ayuda</a>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>

</div>

@code {

    Sidebar sidebar = default!;
    IEnumerable<NavItem>? navItems;
    bool applyPurpleStyle = true;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();
        ToggleSidebarStyles();

        return await Task.FromResult(request.ApplyTo(navItems));       
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "", IconName = IconName.HouseDoorFill, Text = "Inicio", IconColor = IconColor.Success },

            new NavItem { Id = "2", IconName = IconName.FileSlidesFill, Text = "Casos", IconColor = IconColor.Success},
            new NavItem { Id = "3", Href = "/casos", IconName = IconName.BriefcaseFill, Text = "Casos", ParentId="2" },
            new NavItem { Id = "4", Href = "/analistas", IconName = IconName.PeopleFill, Text = "Analistas", ParentId="2"},
            new NavItem { Id = "5", Href = "/tipoAssets", IconName = IconName.PeopleFill, Text = "Tipos Assets", ParentId="2"},

            new NavItem { Id = "6", IconName = IconName.ViewList, Text = "Anális", IconColor = IconColor.Success },
            new NavItem { Id = "7", Href = "/analisis", IconName = IconName.CheckCircleFill, Text = "Configurar Análisis", ParentId="6"},
        };

        return navItems;
    }

    private void ToggleSidebar() => sidebar.ToggleSidebar();
    private void ToggleSidebarStyles() => applyPurpleStyle = true;
}

@if (applyPurpleStyle)
{
    <style>
        :root {
            --bb-sidebar-width: 270px;
            --bb-sidebar-collapsed-width: 50px;
            --bb-sidebar-background-color: rgba(234, 234, 234, 1);
            --bb-sidebar-top-row-background-color: rgba(0,0,0,0.08);
            --bb-sidebar-top-row-border-color: rgb(194,192,192);
            --bb-sidebar-title-text-color: rgb(0,0,0);
            --bb-sidebar-brand-icon-color: #6f42c1;
            --bb-sidebar-brand-image-width: 24px;
            --bb-sidebar-brand-image-height: 24px;
            --bb-sidebar-title-badge-text-color: rgb(255,255,255);
            --bb-sidebar-title-badge-background-color: rgba(25,135,84,var(--bs-bg-opacity,1));
            --bb-sidebar-navbar-toggler-icon-color: rgb(0,0,0);
            --bb-sidebar-navbar-toggler-background-color: rgba(0,0,0,0.08);
            --bb-sidebar-content-border-color: rgb(194,192,192);
            --bb-sidebar-nav-item-text-color: rgba(0,0,0,0.9);
            --bb-sidebar-nav-item-text-active-color-rgb: 0,0,0;
            --bb-sidebar-nav-item-text-hover-color: rgba(var(--bb-sidebar-nav-item-text-active-color-rgb),0.9);
            --bb-sidebar-nav-item-text-active-color: rgba(var(--bb-sidebar-nav-item-text-active-color-rgb),0.9);
            --bb-sidebar-nav-item-background-hover-color: rgba(var(--bb-sidebar-nav-item-text-active-color-rgb),0.08);
            --bb-sidebar-nav-item-group-background-color: rgba(var(--bb-sidebar-nav-item-text-active-color-rgb),0.08);
        }
    </style>
}