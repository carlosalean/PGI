@page "/timeline"

@inherits TimeLineComponent

<div class="content-data mt-4">
    <div class="mb-3">
        <label for="Casos" class="form-label">Casos</label>
        <EditForm Model="SelectedCasoId">
            <InputSelect @bind-Value="SelectedCasoId" class="form-control">
                @if (casos != null && casos.Count > 0)
                {
                    foreach (var caso in casos)
                    {
                        <option value="@caso.ID">@caso.Nombre</option>
                    }
                }
                else
                {
                    <option disabled="disabled">Cargando casos...</option>
                }
            </InputSelect>
        </EditForm>
    </div>
    <div class="row">
    </div>
    <div class="container-fluid overflow-x-auto">
        <LineChart @ref="lineChart" Width="800" />
    </div>
@*     <div class="mt-5">
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" Class="my-1 mr-1" @onclick="async () => await RandomizeAsync()"> Randomize </Button>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" Class="my-1 mr-1" @onclick="async () => await AddDatasetAsync()"> Add Dataset </Button>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" Class="my-1 mr-1" @onclick="async () => await AddDataAsync()"> Add Data </Button>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" Class="my-1 mr-1" @onclick="async () => await ShowHorizontalLineChartAsync()"> Horizontal Line Chart </Button>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" Size="ButtonSize.Small" Class="my-1 mr-1" @onclick="async () => await ShowVerticalLineChartAsync()"> Vertical Line Chart </Button>
    </div>
 *@
</div>

@code {

}
