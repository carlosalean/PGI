@page "/login"
@inject IAuthService AuthService
@inject NavigationManager Navigation
@using System.ComponentModel.DataAnnotations
@using PGI_AF.Interfaces

<div class="d-flex justify-content-center align-items-center">
    <div class="content-data mt-4 p-4 border rounded" style="width: 500px;">
        <h3 class="text-center">Login</h3>

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="username" class="form-label">Nombre de Usuario:</label>
                <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Contraseña:</label>
                <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
                <a class="btn btn-link w-100" @onclick="NavigateToRegister">Registrarse</a>
            </div>
            <button type="submit" class="btn btn-success w-100">Login</button>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        if (await AuthService.LoginAsync(loginModel?.Username!, loginModel?.Password!))
        {
            Navigation.NavigateTo("/", true);
        }
        else
        {
            // Manejar el fallo de autenticación (e.g., mostrar un mensaje al usuario)
        }
    }

    private void NavigateToRegister()
    {
        Navigation.NavigateTo("/register");
    }

    public class LoginModel
    {
        [Required]
        public string? Username { get; set; }

        [Required]
        public string? Password { get; set; }
    }
}
