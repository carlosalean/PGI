// <auto-generated />
using System;
using BackEnd_PGI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackEnd_PGI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240511130811_RelacionCasoMaquina")]
    partial class RelacionCasoMaquina
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackEnd_PGI.Model.Analisis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CasoID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaAnalisis")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CasoID");

                    b.ToTable("analisis");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Analista", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("analista");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Asset", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CasoID")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int?>("MaquinaID")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoAssetID")
                        .HasColumnType("integer");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CasoID");

                    b.HasIndex("MaquinaID");

                    b.ToTable("asset");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Caso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("caso");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.IOC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("ioc");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Maquina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CasoID")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CasoID");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Rol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Tarea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AnalistaID")
                        .HasColumnType("integer");

                    b.Property<int>("CasoID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.HasIndex("AnalistaID");

                    b.HasIndex("CasoID");

                    b.ToTable("tarea");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.TipoAsset", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TipoAssets");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("IdRol")
                        .HasColumnType("integer");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("RolID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Analisis", b =>
                {
                    b.HasOne("BackEnd_PGI.Model.Caso", null)
                        .WithMany("Analisiss")
                        .HasForeignKey("CasoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Asset", b =>
                {
                    b.HasOne("BackEnd_PGI.Model.Caso", null)
                        .WithMany("Assets")
                        .HasForeignKey("CasoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_PGI.Model.Maquina", null)
                        .WithMany("Assets")
                        .HasForeignKey("MaquinaID");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Maquina", b =>
                {
                    b.HasOne("BackEnd_PGI.Model.Caso", null)
                        .WithMany("Maquinas")
                        .HasForeignKey("CasoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Tarea", b =>
                {
                    b.HasOne("BackEnd_PGI.Model.Analista", null)
                        .WithMany("Tareas")
                        .HasForeignKey("AnalistaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_PGI.Model.Caso", null)
                        .WithMany("Tareas")
                        .HasForeignKey("CasoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Usuario", b =>
                {
                    b.HasOne("BackEnd_PGI.Model.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Analista", b =>
                {
                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Caso", b =>
                {
                    b.Navigation("Analisiss");

                    b.Navigation("Assets");

                    b.Navigation("Maquinas");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Maquina", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("BackEnd_PGI.Model.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
